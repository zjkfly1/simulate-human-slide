import random


def get_simulate_track(dis):
    # 初始的三元组列表 -本人手工操作得到，用它来做仿射变换的基础数据，没毛病奥，铁汁！
    triples = [[0, 0, 0], [0, 0, 482], [2, 0, 498], [4, 0, 525], [6, 0, 533], [9, 0, 548], [12, 0, 566], [15, 0, 572],
               [18, 0, 590], [23, 0, 606], [28, 0, 623], [32, 0, 639], [36, 0, 663], [41, 0, 672], [47, 0, 691],
               [54, 0, 706], [63, 0, 722], [72, 0, 738], [81, 0, 757], [112, 4, 947], [113, 4, 1161], [114, 4, 1176],
               [118, 4, 1194], [121, 3, 1210], [125, 3, 1226], [127, 3, 1234], [129, 2, 1250], [132, 2, 1267],
               [134, 1, 1283], [136, 0, 1300], [138, 0, 1317], [140, 0, 1334], [142, -1, 1351], [144, -1, 1367],
               [147, -1, 1384], [149, -2, 1400], [151, -2, 1417], [152, -2, 1433], [154, -3, 1450], [155, -3, 1467],
               [156, -3, 1483], [157, -3, 1500], [157, -3, 1517], [158, -3, 1533], [158, -3, 1567], [158, -3, 1600],
               [158, -3, 1617], [159, -3, 1633], [159, -3, 1650], [159, -3, 1669], [160, -3, 1684], [160, -3, 1700],
               [160, -3, 1718], [160, -3, 1751], [161, -3, 1785], [161, -3, 1801], [161, -3, 1853], [161, -3, 1870],
               [162, -3, 1886], [162, -3, 1903], [162, -3, 1920], [162, -3, 1937], [163, -3, 1969], [163, -4, 1986],
               [163, -4, 2003], [163, -4, 2021], [163, -4, 2054], [164, -4, 2072], [164, -4, 2104], [164, -4, 2122],
               [164, -4, 2139], [165, -4, 2156], [165, -4, 2172], [165, -4, 2188], [166, -4, 2205], [166, -4, 2255],
               [166, -4, 2272], [166, -4, 2289], [167, -4, 2306], [167, -4, 2322], [167, -4, 2338], [168, -4, 2355],
               [168, -5, 2372], [169, -5, 2388], [169, -5, 2406], [170, -5, 2422], [170, -5, 2438], [171, -5, 2456],
               [171, -5, 2472], [171, -5, 2489], [172, -5, 2505], [172, -5, 2522], [172, -5, 2539], [172, -5, 2555],
               [173, -5, 2572], [173, -6, 2590], [174, -6, 2605], [174, -6, 2622], [174, -6, 2639], [175, -6, 2655],
               [175, -6, 2672], [175, -6, 2688], [176, -6, 2706], [176, -6, 2723], [177, -6, 2741], [177, -6, 2756],
               [177, -6, 2772], [178, -6, 2788], [179, -6, 2806], [179, -6, 2822], [180, -6, 2838], [180, -6, 2855],
               [181, -6, 2872], [181, -6, 2888], [181, -7, 2905], [181, -7, 2922], [182, -7, 2939], [182, -7, 2955],
               [182, -7, 2972], [183, -7, 2989], [183, -7, 3005], [183, -7, 3022], [183, -7, 3055], [184, -7, 3072],
               [184, -7, 3106], [184, -7, 3175], [185, -7, 4408], [185, -7, 4423], [186, -7, 4441], [187, -7, 4458],
               [189, -7, 4474], [191, -7, 4490], [193, -8, 4506], [194, -8, 4515], [195, -8, 4530], [197, -9, 4547],
               [198, -9, 4564], [199, -9, 4581], [200, -9, 4597], [201, -9, 4616], [202, -9, 4632], [203, -10, 4647],
               [204, -10, 4664], [204, -10, 4681], [205, -10, 4697], [205, -10, 4714], [206, -10, 4731],
               [206, -10, 4832]]

    # 结果列表，第一个三元组的第三个元素保持不变
    result = [triples[0]]

    # 从第二个三元组开始，计算第三个元素的差值
    for i in range(1, len(triples)):
        diff = triples[i][2] - triples[i - 1][2]
        diff1 = triples[i][1] - triples[i - 1][1]
        diff2 = triples[i][0] - triples[i - 1][0]
        result.append([diff2, diff1, diff])
    print(result)

    rate = float(dis) / 206.0
    # 只对每个三元组的第一个元素乘以比例，并转为整数，其他元素保持不变
    scaled_result = [[round(triple[0] * rate), triple[1], triple[2]] for triple in result]
    print(scaled_result)

    # 由于前文四舍五入，弥补之前丢失数据
    tmp_dis = 0
    for i in range(1, len(scaled_result)):
        tmp_dis = tmp_dis + scaled_result[i][0]
    flg = 1
    if dis - tmp_dis < 0:
        flg = -1
    for i in range(abs(dis - tmp_dis)):
        if i % 2 == 0:
            scaled_result.append([2 * flg, 0, random.randint(15, 20)])
    scaled_result.append([0, 0, 101])

    return scaled_result


if __name__ == '__main__':
    tracks = get_simulate_track(167)
    for track in tracks:
        print(f"横坐标位移:{track[0]}  纵坐标位移:{track[1]} 暂停时间/毫秒:{track[2]}")
